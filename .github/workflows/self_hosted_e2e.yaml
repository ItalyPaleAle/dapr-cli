# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation and Dapr Contributors.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: E2E - Self-hosted

on:
  push:
    branches:
      - master
      - release-*
  schedule:
    - cron: '0 */3 * * *'
  pull_request:
    branches:
      - master
      - 'release-*'

jobs:
  self-hosted-e2e:
    name: Run Self-Hosted E2E tests in ${{ matrix.target_os }}_${{ matrix.target_arch }}
    runs-on: ${{ matrix.os }}
    env:
      GOVER: 1.16
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      GOPROXY: https://proxy.golang.org
      ARCHIVE_OUTDIR: dist/archives
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target_arch: [amd64]
        include:
          - os: ubuntu-latest
            target_os: linux
          - os: macOS-latest
            target_os: darwin
            #- os: windows-latest
            #target_os: windows
    steps:
      - name: Set up Go ${{ env.GOVER }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVER }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Install docker - MacOS
        if: matrix.os == 'macos-latest'
        run: |
          wget "https://raw.githubusercontent.com/Homebrew/homebrew-cask/aa8301c9b4f3f907d4cbe9ffda43dc76227f238b/Casks/docker.rb"
          brew install --cask docker.rb
          mkdir -p /Users/runner/.docker
          xattr -d -r com.apple.quarantine /Applications/Docker.app
          echo "PATH=$PATH" >> $GITHUB_ENV
      - name: Start docker - MacOS
        if: matrix.os == 'macos-latest'
        run: |
          set -x
          VmnetdVersion=$(cat /Applications/Docker.app/Contents/Info.plist | tail -5 | head -1 | cut -d '>' -f 2 | cut -d '<' -f 1)
          cat <<EOF | tee /tmp/com.docker.vmnetd.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>Label</key>
            <string>com.docker.vmnetd</string>
            <key>Program</key>
            <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
            <key>ProgramArguments</key>
            <array>
              <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
            </array>
            <key>RunAtLoad</key>
            <true/>
            <key>Sockets</key>
            <dict>
              <key>Listener</key>
              <dict>
                <key>SockPathMode</key>
                <integer>438</integer>
                <key>SockPathName</key>
                <string>/var/run/com.docker.vmnetd.sock</string>
              </dict>
            </dict>
            <key>Version</key>
            <string>\${VmnetdVersion}</string>
          </dict>
          </plist>
          EOF
          sudo /bin/cp /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd /Library/PrivilegedHelperTools
          # sudo /bin/cp /Applications/Docker.app/Contents/Resources/com.docker.vmnetd.plist /Library/LaunchDaemons/
          sudo /bin/cp /tmp/com.docker.vmnetd.plist /Library/LaunchDaemons/
          sudo /bin/chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
          sudo /bin/chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
          sudo /bin/launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist
          open -g /Applications/Docker.app || exit
          sleep 60
          docker info > /dev/null || true
      - name: Run E2E tests 
        run: |
          export TEST_OUTPUT_FILE=$GITHUB_WORKSPACE/test-e2e-standalone.json
          echo "TEST_OUTPUT_FILE=$TEST_OUTPUT_FILE" >> $GITHUB_ENV
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          make e2e-build-run-sh
        shell: bash
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.target_os }}_${{ matrix.target_arch }}_e2e_standalone.json
          path: ${{ env.TEST_OUTPUT_FILE }}

